apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.prepotency"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //指定jdk版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

/**
 *  For Kotlin use kapt instead of annotationProcessor
 *  kapt 可以替代 annotationProcessor 注释java类
 *  如果在 build 中使用 kapt 和 annotationProcessor 混合引用,可能会导致编译失败,需要全部替换为 kapt
 *  如果使用 room 需要跨 module 的话，需要使用 api 去替代 implementation
 */
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    /**
     *   BaseRecyclerViewAdapterHelper BRVAH 简化recyclerViewAdapter
     *   github:
     *    https://github.com/CymChad/BaseRecyclerViewAdapterHelper
     *   简书:
     *    https://www.jianshu.com/p/b343fcff51b0
     */
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'

    // viewpager2
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    /**
     * TabLaout 单独使用
     * 因为 TabLaout 位于 Design Support 库中，所以想要使用 TabLaout ，引入 Design Support 库即可：
     */
    //noinspection GradleCompatible
    //implementation 'com.android.support:design:28.0.0'
    // 迁移到 Androidx
    implementation 'com.google.android.material:material:1.2.0-alpha06'

    /**
     * FlycoTabLayout
     * github:
     *  https://github.com/H07000223/FlycoTabLayout
     */
    //noinspection GradleCompatible TabLayout第三方库
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'


    /**
     * MagicIndicator 封装 tabLayout viewPager 指示器
     * github:
     *  https://github.com/hackware1993/MagicIndicator
     */
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'

    /**
     * statusbar 沉浸状态栏
     * github:
     *  https://jaeger.itscoder.com/android/2016/03/27/statusbar-util.html
     */
    implementation 'com.jaeger.statusbarutil:library:1.5.1'

    // JWebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.4.0'

    /**
     * okhttp3
     * 官网
     *  https://square.github.io/okhttp/
     * github
     *  https://github.com/square/okhttp/
     * 使用(简书-基本使用)
     *  https://www.jianshu.com/p/da4a806e599b
     */
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
    // 日志拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.3'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    // Retrofit通过GSON将结果转换为Bean对象
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    // scalars 数据解析器
    implementation 'com.squareup.retrofit2:converter-scalars:2.7.2'
    // 让Retrofit支持RxJava
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'

    /**
     * AndroidUtilCode
     * github:
     *  https://github.com/Blankj/AndroidUtilCode/blob/master/lib/utilcode/README-CN.md
     */
    implementation 'com.blankj:utilcodex:1.26.0'

    // 引入multidex库
    implementation 'com.android.support:multidex:1.0.3'

    // leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    def room_version = "2.2.5"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

}
